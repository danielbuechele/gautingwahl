{"version":3,"sources":["types.ts","Menubar.tsx","Card.tsx","useThrowawayCard.ts","useIsMounted.ts","AnswerEmoji.tsx","GameCard.tsx","useAnswers.ts","Game.tsx","ContentCard.tsx","Results.tsx","Welcome.tsx","Info.tsx","Weigth.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Party","Tag","Answer","Screen","Menubar","history","useHistory","match","useRouteMatch","INFO","isInfoScreen","path","className","to","START","onClick","goBack","React","forwardRef","props","ref","children","style","rest","isMounted","useState","setIsMounted","useEffect","setTimeout","useIsMounted","styles","opacity","getRotation","deltaX","threshold","num","min","max","length","x","y","Math","sqrt","pow","useThrowawayCard","config","setDeltaX","deltaY","setDeltaY","swipeEvent","setSwipeEvent","translateDuration","setTranslateDuration","isSwiping","setIsSwiping","result","setResult","onBlur","window","addEventListener","removeEventListener","handlers","useSwipeable","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","onSwiping","abs","POSITIVE","NEGATIVE","onSwiped","e","document","body","overflow","useLayoutEffect","innerHeight","height","innerWidth","width","distanceSoFar","multiplier","timeSoFar","velocity","timeLeft","onNext","transitions","setResultProgrammatically","useCallback","answer","direction","transform","transition","property","duration","map","join","AnswerEmoji","value","role","aria-label","GameCard","number","total","question","tags","t","key","useAnswers","Object","keys","sessionStorage","filter","test","parseInt","replace","reduce","acc","getItem","clear","Game","data","questions","QUESTION","currentQuestion","params","id","NEUTRAL","state","setState","setItem","useAnswer","setAnswer","mixpanel","track","push","RESUTLS","ContentCard","LOGOS","values","party","i","set","Map","Results","answers","totalAnswered","a","results","percentage","sum","q","sort","b","src","get","alt","round","QuestionResult","userAnswer","index","open","setOpen","explanation","Welcome","clearAnswers","restart","Info","Weight","Set","priorities","setPriorities","togglePriority","tag","newPriorities","Array","from","has","size","add","delete","require","init","App","location","useLocation","page","pathname","WEIGHT","Boolean","hostname","localStorage","prompt","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2cc89c53.chunk.js","sourcesContent":["export enum Party {\n  CSU = \"CSU\",\n  GRÜNE = \"Grüne\",\n  SPD = \"SPD\",\n  FDP = \"FDP\",\n  MFG = \"MfG/Piraten\",\n  UBG = \"UBG\",\n  MIFÜ = \"MiFü 82131\"\n}\n\nexport enum Tag {\n  VERKEHR = \"🚗 Verkehr\",\n  BAUEN_WOHNEN = \"🏡 Bauen & Wohnen\",\n  FINANZEN = \"💰 Finanzen\"\n}\n\nexport enum Answer {\n  POSITIVE,\n  NEGATIVE,\n  NEUTRAL\n}\n\nexport enum Screen {\n  START = \"/\",\n  INFO = \"/info\",\n  WEIGHT = \"/gewichtung\",\n  RESUTLS = \"/ergebnis\",\n  QUESTION = \"/these\"\n}\n\nexport type AnswerGroup = {\n  [key in Party]: {\n    answer: Answer;\n    explanation: string | null;\n  };\n};\n\nexport type Question = {\n  question: string;\n  tags: Tag[];\n  answers: AnswerGroup;\n};\n\nexport type Data = {\n  questions: Array<Question>;\n};\n","import React from \"react\";\nimport { NavLink, useRouteMatch, useHistory } from \"react-router-dom\";\nimport { Screen } from \"./types\";\n\nimport \"./Menubar.css\";\n\nfunction Menubar() {\n  const history = useHistory();\n  const match = useRouteMatch(Screen.INFO);\n  const isInfoScreen = match?.path === Screen.INFO;\n\n  return (\n    <div className=\"Menubar\">\n      <NavLink to={Screen.START}>\n        <h1>\n          GautingWahl<em>2020</em>\n        </h1>\n      </NavLink>\n\n      {isInfoScreen ? (\n        <button className=\"nav\" onClick={() => history.goBack()}>\n          zurück\n        </button>\n      ) : (\n        <NavLink className=\"nav\" to={Screen.INFO}>\n          Infos\n        </NavLink>\n      )}\n    </div>\n  );\n}\n\nexport default Menubar;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Card.css\";\n\nfunction useIsMounted() {\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setTimeout(() => setIsMounted(true), 50);\n  }, []);\n  return isMounted;\n}\n\nexport default React.forwardRef(\n  (\n    props: React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLDivElement>,\n      HTMLDivElement\n    >,\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    const { children, className, style, ...rest } = props;\n    const isMounted = useIsMounted();\n\n    const styles = {\n      ...style,\n      opacity: isMounted ? 1 : 0\n    };\n\n    return (\n      <div className={`Card ${className}`} ref={ref} style={styles} {...rest}>\n        {props.children}\n      </div>\n    );\n  }\n);\n","import { useSwipeable, EventData } from \"react-swipeable\";\nimport { useState, useEffect, useLayoutEffect, useCallback } from \"react\";\nimport { Answer } from \"./types\";\nimport useIsMounted from \"./useIsMounted\";\n\ntype Result = null | Answer.POSITIVE | Answer.NEGATIVE;\n\nfunction clamp(num: number, min: number, max: number): number {\n  return num <= min ? min : num >= max ? max : num;\n}\n\nfunction getRotation(deltaX: number, threshold: number): number {\n  const maxRotation = 4;\n  const p = clamp(deltaX / threshold, -1, 1);\n  return p * maxRotation;\n}\n\nfunction length(x: number, y: number) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n}\n\nfunction getTransitions(\n  transitions: Array<{ property: string; duration: number }>\n): string {\n  return transitions\n    .map(({ property, duration }) => `${property} ${duration}ms`)\n    .join(\", \");\n}\n\nexport default function useThrowawayCard(config: {\n  onNext: (answer: Answer) => void;\n  threshold: number;\n  width: number;\n  height: number;\n}) {\n  const [deltaX, setDeltaX] = useState(0);\n  const [deltaY, setDeltaY] = useState(0);\n  const [swipeEvent, setSwipeEvent] = useState<EventData | null>(null);\n  const [translateDuration, setTranslateDuration] = useState(200);\n  const [isSwiping, setIsSwiping] = useState(false);\n  const [result, setResult] = useState<Result>(null);\n  useEffect(() => {\n    const onBlur = () => {\n      setResult(null);\n      setDeltaX(0);\n      setDeltaY(0);\n      setIsSwiping(false);\n    };\n    window.addEventListener(\"blur\", onBlur);\n    return () => {\n      window.removeEventListener(\"blur\", onBlur);\n    };\n  }, []);\n\n  const isMounted = useIsMounted();\n\n  const handlers = useSwipeable({\n    delta: 0,\n    preventDefaultTouchmoveEvent: false,\n    trackTouch: true,\n    trackMouse: true,\n    rotationAngle: 0,\n    onSwiping: ({ deltaX, deltaY }) => {\n      setDeltaX(deltaX * -1);\n      setDeltaY(deltaY * -1);\n      setIsSwiping(true);\n      if (Math.abs(deltaX) > config.threshold) {\n        setResult(deltaX < 0 ? Answer.POSITIVE : Answer.NEGATIVE);\n      } else {\n        setResult(null);\n      }\n    },\n    onSwiped: e => {\n      setSwipeEvent(e);\n      setIsSwiping(false);\n    }\n  });\n\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n    return () => {\n      document.body.style.overflow = \"auto\";\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (!swipeEvent) {\n      return;\n    }\n    setSwipeEvent(null);\n    if (result === null) {\n      setDeltaX(0);\n      setDeltaY(0);\n    } else {\n      // assuming card is in the middle of screen\n      const y = window.innerHeight / 2 + config.height / 2;\n      const x = window.innerWidth / 2 + config.width / 2;\n\n      const distanceSoFar = length(swipeEvent.deltaX, swipeEvent.deltaY);\n      const distanceTotal = length(x, y);\n      const multiplier = distanceTotal / distanceSoFar;\n\n      setDeltaX(deltaX * multiplier);\n      setDeltaY(deltaY * multiplier);\n\n      const timeSoFar = 1 / (swipeEvent.velocity / distanceSoFar);\n      const timeLeft = Math.min(750, timeSoFar * multiplier - timeSoFar);\n\n      setTranslateDuration(timeLeft);\n\n      setTimeout(() => {\n        config.onNext(result);\n      }, timeLeft);\n    }\n  }, [swipeEvent, result, deltaX, deltaY, config]);\n\n  const setResultProgrammatically = useCallback(\n    (answer: Answer.POSITIVE | Answer.NEGATIVE) => {\n      setResult(answer);\n      setTimeout(() => {\n        const direction = answer === Answer.POSITIVE ? 1 : -1;\n        setDeltaX(direction * (window.innerWidth / 2 + config.width));\n        setTranslateDuration(500);\n        setTimeout(() => config.onNext(answer), 500);\n      }, 300);\n    },\n    [config]\n  );\n\n  const style = {\n    transform: `translate(calc(-50% + ${deltaX}px), calc(-50% + ${deltaY}px)) rotate(${getRotation(\n      deltaX,\n      config.threshold\n    )}deg) scale(${isMounted ? 1 : 0.3})`,\n    transition: getTransitions([\n      { property: \"box-shadow\", duration: 200 },\n      { property: \"transform\", duration: isSwiping ? 0 : translateDuration },\n      { property: \"opacity\", duration: 500 },\n      { property: \"scale\", duration: 500 }\n    ])\n  };\n\n  return { handlers, style, isSwiping, result, setResultProgrammatically };\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function useIsMounted() {\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setTimeout(() => setIsMounted(true), 50);\n  }, []);\n  return isMounted;\n}\n","import React from \"react\";\nimport { Answer } from \"./types\";\n\nexport default function AnswerEmoji(props: { value: Answer }) {\n  if (props.value === Answer.POSITIVE) {\n    return (\n      <span role=\"img\" aria-label=\"stimme zu\" className=\"emoji\">\n        👍\n      </span>\n    );\n  } else if (props.value === Answer.NEGATIVE) {\n    return (\n      <span role=\"img\" aria-label=\"stimme nicht zu\" className=\"emoji\">\n        👎\n      </span>\n    );\n  } else {\n    return (\n      <span role=\"img\" aria-label=\"neutral\" className=\"emoji\">\n        ❓\n      </span>\n    );\n  }\n}\n","import React from \"react\";\nimport { Answer, Tag } from \"./types\";\nimport Card from \"./Card\";\nimport useThrowawayCard from \"./useThrowawayCard\";\nimport \"./GameCard.css\";\nimport AnswerEmoji from \"./AnswerEmoji\";\n\nexport default function GameCard(props: {\n  number: number;\n  total: number;\n  question: string;\n  tags: Tag[];\n  value: Answer;\n  onNext: (answer: Answer) => void;\n}) {\n  const { onNext, value } = props;\n  const {\n    handlers,\n    style,\n    isSwiping,\n    result,\n    setResultProgrammatically\n  } = useThrowawayCard({ onNext, threshold: 80, width: 300, height: 400 });\n\n  return (\n    <Card\n      className={`GameCard ${isSwiping ? \"swiping\" : \"\"}`}\n      {...handlers}\n      style={style}\n    >\n      <div className=\"info\">\n        These {props.number} von {props.total}\n      </div>\n      <div className=\"question\">\n        <p>{props.question}</p>\n        {props.tags.map(t => (\n          <span key={t} className=\"tag\">\n            {t}\n          </span>\n        ))}\n      </div>\n      <div>\n        <button\n          onClick={() => setResultProgrammatically(Answer.NEGATIVE)}\n          className={\n            (value === Answer.NEGATIVE && result === null) ||\n            result === Answer.NEGATIVE\n              ? \"negative-active\"\n              : \"\"\n          }\n        >\n          <AnswerEmoji value={Answer.NEGATIVE} />\n        </button>\n        <button\n          onClick={() => setResultProgrammatically(Answer.POSITIVE)}\n          className={\n            (value === Answer.POSITIVE && result === null) ||\n            result === Answer.POSITIVE\n              ? \"positive-active\"\n              : \"\"\n          }\n        >\n          <AnswerEmoji value={Answer.POSITIVE} />\n        </button>\n      </div>\n    </Card>\n  );\n}\n","import { Answer } from \"./types\";\nimport { useCallback, useState, useEffect } from \"react\";\n\nexport function useAnswer(\n  question: number\n): [Answer, (answer: Answer) => void] {\n  const [state, setState] = useState<Answer>(Answer.NEUTRAL);\n  const key = `question${question}`;\n  useEffect(() => {\n    const value = sessionStorage.getItem(key) as keyof typeof Answer | null;\n    let answer = Answer.NEUTRAL;\n    if (value !== null) {\n      answer = Answer[value];\n    }\n    setState(answer);\n  }, [key]);\n\n  const setAnswer = useCallback(\n    (answer: Answer) => {\n      sessionStorage.setItem(key, Answer[answer]);\n      setState(answer);\n    },\n    [key]\n  );\n  return [state, setAnswer];\n}\n\nexport function useAnswers(): [Answer[], () => void] {\n  const answers = Object.keys(sessionStorage)\n    .filter(key => /question\\d+/.test(key))\n    .map(key => parseInt(key.replace(\"question\", \"\"), 10))\n    .reduce((acc, key) => {\n      const value = sessionStorage.getItem(\n        `question${key}`\n      ) as keyof typeof Answer;\n      acc[key] = Answer[value];\n      return acc;\n    }, [] as Answer[]);\n\n  const clearAnswers = useCallback(() => {\n    sessionStorage.clear();\n  }, []);\n\n  return [answers, clearAnswers];\n}\n","import React, { useCallback } from \"react\";\nimport \"./Game.css\";\nimport GameCard from \"./GameCard\";\nimport mixpanel from \"mixpanel-browser\";\nimport AnswerEmoji from \"./AnswerEmoji\";\nimport { Answer, Data, Screen } from \"./types\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\nimport { useAnswer } from \"./useAnswers\";\n\nexport default function Game(props: { data: Data }) {\n  const total = props.data.questions.length;\n  const match = useRouteMatch<{ id: string }>(Screen.QUESTION + \"/:id\");\n  const currentQuestion = parseInt(match?.params.id || \"1\", 10) - 1;\n  const [answer, setAnswer] = useAnswer(currentQuestion);\n  const history = useHistory();\n  const onNext = useCallback(\n    (answer: Answer) => {\n      setAnswer(answer);\n      mixpanel.track(\"answer\", {\n        question: currentQuestion,\n        result: Answer[answer]\n      });\n      if (currentQuestion < total - 1) {\n        history.push(Screen.QUESTION + `/${currentQuestion + 2}`);\n      } else {\n        mixpanel.track(\"finished\");\n        history.push(Screen.RESUTLS);\n      }\n    },\n    [setAnswer, currentQuestion, total, history]\n  );\n\n  return (\n    <>\n      <GameCard\n        key={`question${currentQuestion}`}\n        onNext={onNext}\n        number={currentQuestion + 1}\n        total={total}\n        question={props.data.questions[currentQuestion].question}\n        tags={props.data.questions[currentQuestion].tags}\n        value={answer}\n      />\n      <button\n        className=\"skip\"\n        onClick={() => {\n          setAnswer(Answer.NEUTRAL);\n          setTimeout(() => onNext(Answer.NEUTRAL), 300);\n        }}\n      >\n        <AnswerEmoji value={Answer.NEUTRAL} />\n        These überspringen\n      </button>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./ContentCard.css\";\nimport Card from \"./Card\";\n\nexport default function ContentCard(\n  props: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  >\n) {\n  return (\n    <Card className={`${props.className} ContentCard`}>{props.children}</Card>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from \"react\";\nimport \"./Results.css\";\nimport ContentCard from \"./ContentCard\";\nimport { Data, Party, Answer, Question } from \"./types\";\nimport { useAnswers } from \"./useAnswers\";\nimport AnswerEmoji from \"./AnswerEmoji\";\n\nconst LOGOS = Object.values(Party).reduce(\n  (acc, party, i) => acc.set(party, `/party${i}.svg`),\n  new Map<Party, string>()\n);\n\nexport default function Results(props: { data: Data }) {\n  const [answers] = useAnswers();\n  const totalAnswered = answers.filter(a => a !== Answer.NEUTRAL).length;\n\n  const results: Array<{\n    party: Party;\n    percentage: number;\n  }> = Object.values(Party)\n    .map(party => ({\n      party,\n      percentage:\n        props.data.questions.reduce((sum, q, i) => {\n          const answer = q.answers[party].answer;\n          if (answer === answers[i] && answer !== Answer.NEUTRAL) {\n            sum++;\n          }\n          return sum;\n        }, 0) / totalAnswered\n    }))\n    .sort((a, b) => b.percentage - a.percentage);\n\n  return (\n    <>\n      <ContentCard className=\"Results\">\n        <h2>Ergebnis</h2>\n        <ol>\n          {results.map(({ party, percentage }) => (\n            <li key={party} className=\"ResultRow\">\n              <img src={LOGOS.get(party)} alt={`Logo ${party}`} />\n              <strong className=\"partyName\">{party}</strong>\n              {Math.round(percentage * 100)}%\n            </li>\n          ))}\n        </ol>\n      </ContentCard>\n      <ContentCard className=\"Results\">\n        <h2>Details</h2>\n        <ol>\n          {props.data.questions.map((q, i) => (\n            <QuestionResult\n              key={i}\n              value={q}\n              userAnswer={answers[i]}\n              index={i + 1}\n            />\n          ))}\n        </ol>\n      </ContentCard>\n    </>\n  );\n}\n\nfunction QuestionResult(props: {\n  value: Question;\n  userAnswer: Answer;\n  index: number;\n}) {\n  const [open, setOpen] = useState<boolean>(false);\n  const { value, userAnswer, index } = props;\n\n  return (\n    <li className={`QuestionResult ${open ? \"isOpen\" : \"\"}`}>\n      <a onClick={() => setOpen(!open)}>\n        <h3>\n          {index}) {value.question}\n        </h3>\n        <span className=\"icon\">⌃</span>\n      </a>\n      {open && (\n        <ul>\n          <li className=\"answer\">\n            <AnswerEmoji value={userAnswer} />\n            <strong>Deine Antwort</strong>\n          </li>\n          {Object.values(Party).map(party => (\n            <li\n              key={party}\n              className={`answer ${\n                value.answers[party].answer === Answer.NEUTRAL ||\n                value.answers[party].answer !== userAnswer\n                  ? \"different\"\n                  : \"\"\n              }`}\n            >\n              <AnswerEmoji value={value.answers[party].answer} />\n              <div>\n                <strong>{party}</strong>\n                {value.answers[party].explanation && (\n                  <span className=\"explanation\">\n                    {value.answers[party].explanation}\n                  </span>\n                )}\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </li>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport Card from \"./Card\";\nimport { Screen } from \"./types\";\nimport useThrowawayCard from \"./useThrowawayCard\";\nimport { Party } from \"./types\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAnswers } from \"./useAnswers\";\n\nexport default function Welcome(props: { total: number }) {\n  const history = useHistory();\n  const [, clearAnswers] = useAnswers();\n  const onNext = useCallback(() => {\n    clearAnswers();\n    history.push(Screen.QUESTION + \"/1\");\n  }, [clearAnswers, history]);\n  const { handlers, style } = useThrowawayCard({\n    onNext,\n    width: 400,\n    height: 500,\n    threshold: 80\n  });\n\n  const restart = sessionStorage.getItem(\"question0\") !== null;\n\n  return (\n    <Card {...handlers} style={style}>\n      <h2>Willkommen</h2>\n      <p>\n        Beim Themen-Check des Jugendbeirats zur Kommunalwahl 2020 in Gauting\n        kannst du {props.total} Thesen beantworten und sehen mit welcher der{\" \"}\n        {Object.keys(Party).length} Parteien du am meisten übereinstimmst.\n      </p>\n      <div>\n        <button onClick={onNext} className=\"primary\">\n          {restart ? \"Neustarten\" : \"Los geht's\"}\n        </button>\n        {restart && (\n          <button onClick={() => history.push(Screen.RESUTLS)}>Ergebnis</button>\n        )}\n      </div>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport ContentCard from \"./ContentCard\";\n\nexport default function Info() {\n  return (\n    <>\n      <ContentCard>\n        <h2>Informationen</h2>\n        <p>...</p>\n      </ContentCard>\n      <ContentCard>\n        <h2>Impressum</h2>\n        <p>...</p>\n      </ContentCard>\n    </>\n  );\n}\n","import React, { useState, useCallback } from \"react\";\nimport \"./Weight.css\";\nimport ContentCard from \"./ContentCard\";\nimport { Tag, Screen } from \"./types\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MAX_WEIGHTS = 3;\n\nexport default function Weight() {\n  const history = useHistory();\n  const [priorities, setPriorities] = useState<Set<Tag>>(new Set());\n\n  const togglePriority = useCallback(\n    (tag: Tag) => {\n      const newPriorities = new Set(Array.from(priorities.values()));\n      if (!newPriorities.has(tag) && newPriorities.size < MAX_WEIGHTS) {\n        newPriorities.add(tag);\n      } else {\n        newPriorities.delete(tag);\n      }\n      setPriorities(newPriorities);\n    },\n    [priorities]\n  );\n\n  return (\n    <ContentCard className=\"Weight\">\n      <h2>Gewichtung</h2>\n      <p>\n        Wähle bis zu {MAX_WEIGHTS} Themen aus die dir besonders wichtig sind.\n        Übereinstimmungen in diesen Themen werden doppelt gewertet.\n      </p>\n      <ul>\n        {Object.values(Tag).map(tag => (\n          <li>\n            <button\n              onClick={() => togglePriority(tag)}\n              className={priorities.has(tag) ? \"active\" : \"\"}\n            >\n              {tag}\n            </button>\n          </li>\n        ))}\n      </ul>\n      <button className=\"primary\" onClick={() => history.push(Screen.RESUTLS)}>\n        Zum Ergebnis\n      </button>\n    </ContentCard>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Menubar from \"./Menubar\";\nimport Game from \"./Game\";\nimport Results from \"./Results\";\nimport { Data, Screen } from \"./types\";\nimport Welcome from \"./Welcome\";\nimport mixpanel from \"mixpanel-browser\";\nimport Info from \"./Info\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport Weight from \"./Weigth\";\nconst data: Data = require(\"./data.json\");\n\nmixpanel.init(\"4c4511d62e6eb4cf788020022ee93179\");\nif (process.env.NODE_ENV !== \"production\") {\n  console.info(\"Mixpanel disabled\");\n  mixpanel.disable();\n}\n\nfunction App() {\n  const location = useLocation();\n  React.useEffect(() => {\n    mixpanel.track(\"pageview\", {\n      page: location.pathname\n    });\n  }, [location]);\n\n  return (\n    <div className=\"App\">\n      <Menubar />\n      <Switch>\n        <Route path={Screen.INFO}>\n          <Info />\n        </Route>\n        <Route path={Screen.RESUTLS}>\n          <Results data={data} />\n        </Route>\n        <Route path={Screen.QUESTION}>\n          <Game data={data} />\n        </Route>\n        <Route path={Screen.WEIGHT}>\n          <Weight />\n        </Route>\n        <Route path={Screen.START}>\n          <Welcome total={data.questions.length} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nif (\n  process.env.NODE_ENV !== \"production\" ||\n  localStorage.getItem(\"preview\") ||\n  prompt(\"Gauting Wahl ist noch nicht bereit.\\nPasswort:\") === \"preview\"\n) {\n  localStorage.setItem(\"preview\", \"1\");\n  ReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}